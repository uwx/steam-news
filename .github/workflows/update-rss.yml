name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  schedule:
    - cron: 0 0 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Keepalive Workflow
        # You may pin to the exact commit or the version.
        # uses: gautamkrishnar/keepalive-workflow@790c7f09285a59b09bb578c85e271c6ff2af97c4
        uses: gautamkrishnar/keepalive-workflow@1.1.0
        with:
          # # GitHub access token with Repo scope
          # gh_token: ${{ secrets.GH_TOKEN }} # optional, default is ${{ github.token }}
          # # Commit message used while committing to the repo
          commit_message: Automated commit [ci skip] [skip ci] # optional, default is Automated commit by Keepalive Workflow to keep the repository active
          # # Username used while committing to the repo
          # committer_username: # optional, default is gkr-bot
          # # Email id used while committing to the repo
          # committer_email: # optional, default is gkr-bot@tuta.io
          # # Time elapsed from the last commit to trigger a new automated commit (in days)
          # time_elapsed: # optional, default is 50
          # # Defines if the workflow pushes the changes automatically
          # auto_push: # optional, default is true

      - uses: pnpm/action-setup@v4
        with:
          version: 9.15.0+sha512.76e2379760a4328ec4415815bcd6628dee727af3779aaa4c914e3944156c4299921a89f976381ee107d41f12cfa4b66681ca9c718f0668fa0831ed4c6d8ba56c

      - name: Setup SteamNews.db cache
        uses: actions/cache/restore@v3
        with:
          path: steam_news.ldb
          key: db2-

      - uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: sqlite3
          version: 1.0

      - name: Install dependencies
        run: pnpm install

      - name: Update RSS feed
        run: |
          mkdir _site
          pnpx tsx src_v2/index.ts --verbose --profile 76561198043308224 --last_6_months_only --publish _site/steam_news.xml --filter_feed_names steam_community_announcements
        env:
          STEAM_WEB_API_KEY: ${{ secrets.STEAM_WEB_API_KEY }}

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v2.0.0
        with:
          # Upload entire repository
          path: '_site'

      - name: Deploy GitHub Pages site
        uses: actions/deploy-pages@v3.0.1

      - name: Vacuum SQLite database
        run: sqlite3 SteamNews.db "VACUUM;"

      - name: Cache SteamNews.db database
        uses: actions/cache/save@v3
        with:
          path: steam_news.ldb
          key: db2-${{ hashFiles('steam_news.ldb/*') }}

